
#DATA CLEANING IN SQL

#After creating a schema and importing the raw data, create a duplicate datatset

select * from lay_offs;

create table layoffs_stages
like layoffs;

select * from layoffs_stages;

insert layoffs_stages
select * 
from layoffs;

#Removing duplicates

select *,
row_number () over (partition by company, location, industry, total_laid_off, 
percentage_laid_off, total_laid_off, 'date', stage, country, funds_raised_millions) as row_numz
from  layoffs_stages;

with dup_cte as (
select *,
row_number () over (partition by company, location, industry, total_laid_off, 
percentage_laid_off, total_laid_off, 'date', stage, country, funds_raised_millions) as row_numz
from  layoffs_stages)
select * from dup_cte
where row_numz > 1; 

select * from layoffs_stages
where company = 'better.com';

select * from layoffs_stages
where company = 'oda';

delete 
from dup_cte
where row_numz > 1;

CREATE TABLE `layoffs_stages2` (
  `company` text,
  `location` text,
  `industry` text,
  `total_laid_off` int DEFAULT NULL,
  `percentage_laid_off` text,
  `date` text,
  `stage` text,
  `country` text,
  `funds_raised_millions` int DEFAULT NULL,
  `row_numz` int 
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;


select * from layoffs_stages2;

insert into layoffs_stages2
select *,
row_number () over (partition by company, location, industry, total_laid_off, 
percentage_laid_off, total_laid_off, 'date', stage, country, funds_raised_millions) as row_numz
from  layoffs_stages;

select * 
from layoffs_stages2
where row_numz >1;

delete
from layoffs_stages2
where row_numz >1;

select * 
from layoffs_stages2;

#Standardizing data

select distinct(company)
from layoffs_stages2; 

select company, trim(company)
from layoffs_stages2;
 
select distinct(industry)
from layoffs_stages2
order by 1;

select *
from layoffs_stages2
where industry like 'crypto%';
 
update layoffs_stages2
set industry = 'crypto'
where industry like 'crypto%';

select distinct (location)
from layoffs_stages2
order by 1; 

select distinct (country)
from layoffs_stages2
order by 1; 

select distinct country, trim(trailing '.' from country)
from layoffs_stages2
order by 1;

update layoffs_stages2
set country = trim(trailing '.' from country)
where country like 'united states%';

 select date from layoffs_stages2;

select date, 'date', 
str_to_date('date','%m/%d/%Y')
from layoffs_stages2;

update layoffs_stages2
set str_to_date('date','%m/%d/%Y');

alter table layoffs_stages 
modify column 'date' date;

#Review nulll and blank values

select * 
from layoffs_stages2
where total_laid_off is null
and percentage_laid_off is null;

update layoffs_stages2
set industry = null
where industry = '';


select *
from layoffs_stages2
where industry is null
or industry = '';

select *
from layoffs_stages2
where company like 'airbnb';

select t1.industry, t2.industry 
from layoffs_stages2 t1
join
layoffs_stages2 t2
on t1.company = t2.company
where (t1.industry is null or t1.industry ='')
and t2.industry is not null;

update layoffs_stages2 t1
join layoffs_stages2 t2
on t1.company = t2.company
set t1.industry = t2.industry
where t1.industry is null
and t2.industry is not null;

select *
from layoffs_stages2
where company like 'bally%';


# Remove columns 

select * from layoffs_stages2;

select * 
from layoffs_stages2
where total_laid_off is null
and percentage_laid_off is null;

delete
from layoffs_stages2
where total_laid_off is null
and percentage_laid_off is null;

alter table layoffs_stages2
drop column row_numz;
